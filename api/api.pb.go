// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cmd int32

const (
	Cmd_None Cmd = 0
	// local -> xcloud
	Cmd_Handshake        Cmd = 1
	Cmd_MultiSessionData Cmd = 2
	// xcloud -> local
	Cmd_SessionHTTP     Cmd = 20
	Cmd_SessionConnect  Cmd = 21
	Cmd_SessionClose    Cmd = 22
	Cmd_SessionUserBind Cmd = 23
	// xcloud <-> local
	Cmd_SessionData Cmd = 40
)

var Cmd_name = map[int32]string{
	0:  "None",
	1:  "Handshake",
	2:  "MultiSessionData",
	20: "SessionHTTP",
	21: "SessionConnect",
	22: "SessionClose",
	23: "SessionUserBind",
	40: "SessionData",
}

var Cmd_value = map[string]int32{
	"None":             0,
	"Handshake":        1,
	"MultiSessionData": 2,
	"SessionHTTP":      20,
	"SessionConnect":   21,
	"SessionClose":     22,
	"SessionUserBind":  23,
	"SessionData":      40,
}

func (x Cmd) String() string {
	return proto.EnumName(Cmd_name, int32(x))
}

func (Cmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type HandshakeRequest struct {
	AppID                string   `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	AccessKey            string   `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	Config               string   `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeRequest) Reset()         { *m = HandshakeRequest{} }
func (m *HandshakeRequest) String() string { return proto.CompactTextString(m) }
func (*HandshakeRequest) ProtoMessage()    {}
func (*HandshakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *HandshakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeRequest.Unmarshal(m, b)
}
func (m *HandshakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeRequest.Marshal(b, m, deterministic)
}
func (m *HandshakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeRequest.Merge(m, src)
}
func (m *HandshakeRequest) XXX_Size() int {
	return xxx_messageInfo_HandshakeRequest.Size(m)
}
func (m *HandshakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeRequest proto.InternalMessageInfo

func (m *HandshakeRequest) GetAppID() string {
	if m != nil {
		return m.AppID
	}
	return ""
}

func (m *HandshakeRequest) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *HandshakeRequest) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type MultiSessionDataRequest struct {
	SessionIDs           []string `protobuf:"bytes,1,rep,name=sessionIDs,proto3" json:"sessionIDs,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiSessionDataRequest) Reset()         { *m = MultiSessionDataRequest{} }
func (m *MultiSessionDataRequest) String() string { return proto.CompactTextString(m) }
func (*MultiSessionDataRequest) ProtoMessage()    {}
func (*MultiSessionDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *MultiSessionDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiSessionDataRequest.Unmarshal(m, b)
}
func (m *MultiSessionDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiSessionDataRequest.Marshal(b, m, deterministic)
}
func (m *MultiSessionDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiSessionDataRequest.Merge(m, src)
}
func (m *MultiSessionDataRequest) XXX_Size() int {
	return xxx_messageInfo_MultiSessionDataRequest.Size(m)
}
func (m *MultiSessionDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiSessionDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiSessionDataRequest proto.InternalMessageInfo

func (m *MultiSessionDataRequest) GetSessionIDs() []string {
	if m != nil {
		return m.SessionIDs
	}
	return nil
}

func (m *MultiSessionDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SessionHTTPNotify struct {
	SessionID            string            `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Path                 string            `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionHTTPNotify) Reset()         { *m = SessionHTTPNotify{} }
func (m *SessionHTTPNotify) String() string { return proto.CompactTextString(m) }
func (*SessionHTTPNotify) ProtoMessage()    {}
func (*SessionHTTPNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *SessionHTTPNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionHTTPNotify.Unmarshal(m, b)
}
func (m *SessionHTTPNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionHTTPNotify.Marshal(b, m, deterministic)
}
func (m *SessionHTTPNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionHTTPNotify.Merge(m, src)
}
func (m *SessionHTTPNotify) XXX_Size() int {
	return xxx_messageInfo_SessionHTTPNotify.Size(m)
}
func (m *SessionHTTPNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionHTTPNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SessionHTTPNotify proto.InternalMessageInfo

func (m *SessionHTTPNotify) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *SessionHTTPNotify) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SessionHTTPNotify) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *SessionHTTPNotify) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type SessionHTTPNotifyResponse struct {
	Code                 uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Headers              map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionHTTPNotifyResponse) Reset()         { *m = SessionHTTPNotifyResponse{} }
func (m *SessionHTTPNotifyResponse) String() string { return proto.CompactTextString(m) }
func (*SessionHTTPNotifyResponse) ProtoMessage()    {}
func (*SessionHTTPNotifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *SessionHTTPNotifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionHTTPNotifyResponse.Unmarshal(m, b)
}
func (m *SessionHTTPNotifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionHTTPNotifyResponse.Marshal(b, m, deterministic)
}
func (m *SessionHTTPNotifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionHTTPNotifyResponse.Merge(m, src)
}
func (m *SessionHTTPNotifyResponse) XXX_Size() int {
	return xxx_messageInfo_SessionHTTPNotifyResponse.Size(m)
}
func (m *SessionHTTPNotifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionHTTPNotifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionHTTPNotifyResponse proto.InternalMessageInfo

func (m *SessionHTTPNotifyResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SessionHTTPNotifyResponse) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *SessionHTTPNotifyResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type SessionConnectNotify struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	OpenID               string   `protobuf:"bytes,2,opt,name=openID,proto3" json:"openID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionConnectNotify) Reset()         { *m = SessionConnectNotify{} }
func (m *SessionConnectNotify) String() string { return proto.CompactTextString(m) }
func (*SessionConnectNotify) ProtoMessage()    {}
func (*SessionConnectNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *SessionConnectNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionConnectNotify.Unmarshal(m, b)
}
func (m *SessionConnectNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionConnectNotify.Marshal(b, m, deterministic)
}
func (m *SessionConnectNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionConnectNotify.Merge(m, src)
}
func (m *SessionConnectNotify) XXX_Size() int {
	return xxx_messageInfo_SessionConnectNotify.Size(m)
}
func (m *SessionConnectNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionConnectNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SessionConnectNotify proto.InternalMessageInfo

func (m *SessionConnectNotify) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *SessionConnectNotify) GetOpenID() string {
	if m != nil {
		return m.OpenID
	}
	return ""
}

type SessionCloseNotify struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionCloseNotify) Reset()         { *m = SessionCloseNotify{} }
func (m *SessionCloseNotify) String() string { return proto.CompactTextString(m) }
func (*SessionCloseNotify) ProtoMessage()    {}
func (*SessionCloseNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *SessionCloseNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionCloseNotify.Unmarshal(m, b)
}
func (m *SessionCloseNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionCloseNotify.Marshal(b, m, deterministic)
}
func (m *SessionCloseNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionCloseNotify.Merge(m, src)
}
func (m *SessionCloseNotify) XXX_Size() int {
	return xxx_messageInfo_SessionCloseNotify.Size(m)
}
func (m *SessionCloseNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionCloseNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SessionCloseNotify proto.InternalMessageInfo

func (m *SessionCloseNotify) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type SessionUserBindNotify struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	OpenID               string   `protobuf:"bytes,2,opt,name=openID,proto3" json:"openID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionUserBindNotify) Reset()         { *m = SessionUserBindNotify{} }
func (m *SessionUserBindNotify) String() string { return proto.CompactTextString(m) }
func (*SessionUserBindNotify) ProtoMessage()    {}
func (*SessionUserBindNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *SessionUserBindNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionUserBindNotify.Unmarshal(m, b)
}
func (m *SessionUserBindNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionUserBindNotify.Marshal(b, m, deterministic)
}
func (m *SessionUserBindNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionUserBindNotify.Merge(m, src)
}
func (m *SessionUserBindNotify) XXX_Size() int {
	return xxx_messageInfo_SessionUserBindNotify.Size(m)
}
func (m *SessionUserBindNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionUserBindNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SessionUserBindNotify proto.InternalMessageInfo

func (m *SessionUserBindNotify) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *SessionUserBindNotify) GetOpenID() string {
	if m != nil {
		return m.OpenID
	}
	return ""
}

type SessionDataBiNotify struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionDataBiNotify) Reset()         { *m = SessionDataBiNotify{} }
func (m *SessionDataBiNotify) String() string { return proto.CompactTextString(m) }
func (*SessionDataBiNotify) ProtoMessage()    {}
func (*SessionDataBiNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *SessionDataBiNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDataBiNotify.Unmarshal(m, b)
}
func (m *SessionDataBiNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDataBiNotify.Marshal(b, m, deterministic)
}
func (m *SessionDataBiNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDataBiNotify.Merge(m, src)
}
func (m *SessionDataBiNotify) XXX_Size() int {
	return xxx_messageInfo_SessionDataBiNotify.Size(m)
}
func (m *SessionDataBiNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDataBiNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDataBiNotify proto.InternalMessageInfo

func (m *SessionDataBiNotify) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *SessionDataBiNotify) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.Cmd", Cmd_name, Cmd_value)
	proto.RegisterType((*HandshakeRequest)(nil), "api.HandshakeRequest")
	proto.RegisterType((*MultiSessionDataRequest)(nil), "api.MultiSessionDataRequest")
	proto.RegisterType((*SessionHTTPNotify)(nil), "api.SessionHTTPNotify")
	proto.RegisterMapType((map[string]string)(nil), "api.SessionHTTPNotify.HeadersEntry")
	proto.RegisterType((*SessionHTTPNotifyResponse)(nil), "api.SessionHTTPNotifyResponse")
	proto.RegisterMapType((map[string]string)(nil), "api.SessionHTTPNotifyResponse.HeadersEntry")
	proto.RegisterType((*SessionConnectNotify)(nil), "api.SessionConnectNotify")
	proto.RegisterType((*SessionCloseNotify)(nil), "api.SessionCloseNotify")
	proto.RegisterType((*SessionUserBindNotify)(nil), "api.SessionUserBindNotify")
	proto.RegisterType((*SessionDataBiNotify)(nil), "api.SessionDataBiNotify")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0x49, 0x53, 0x0a, 0xb9, 0x75, 0xcc, 0xdc, 0xba, 0x2e, 0x20, 0x84, 0xaa, 0xf0, 0x52,
	0x81, 0xd4, 0x87, 0xf1, 0x82, 0x26, 0xf1, 0xb2, 0x75, 0xa2, 0x13, 0x74, 0x42, 0x61, 0xbc, 0x22,
	0x79, 0xc9, 0x8d, 0x46, 0x2b, 0xb6, 0xa9, 0x5d, 0xa4, 0x7c, 0x0c, 0xbe, 0x14, 0x9f, 0x80, 0x0f,
	0x84, 0xec, 0x38, 0x6b, 0x68, 0x91, 0xa8, 0x04, 0x6f, 0x77, 0xe7, 0xdc, 0xef, 0xfe, 0x77, 0x3e,
	0x07, 0x22, 0xae, 0x8a, 0x91, 0x5a, 0x48, 0x23, 0x31, 0xe4, 0xaa, 0x48, 0x3e, 0x01, 0x9b, 0x70,
	0x91, 0xeb, 0x19, 0xbf, 0xa1, 0x94, 0xbe, 0x2e, 0x49, 0x1b, 0xec, 0xc1, 0x5d, 0xae, 0xd4, 0xf9,
	0x38, 0x0e, 0x06, 0xc1, 0x30, 0x4a, 0x2b, 0x07, 0x9f, 0x40, 0xc4, 0xb3, 0x8c, 0xb4, 0x7e, 0x4b,
	0x65, 0xdc, 0x72, 0x27, 0xab, 0x00, 0xf6, 0xa1, 0x93, 0x49, 0x71, 0x5d, 0x7c, 0x8e, 0x43, 0x77,
	0xe4, 0xbd, 0x64, 0x0a, 0x87, 0xd3, 0xe5, 0xdc, 0x14, 0x1f, 0x48, 0xeb, 0x42, 0x8a, 0x31, 0x37,
	0xbc, 0x2e, 0xf3, 0x14, 0x40, 0x57, 0xd1, 0xf3, 0xb1, 0x8e, 0x83, 0x41, 0x38, 0x8c, 0xd2, 0x46,
	0x04, 0x11, 0xda, 0x39, 0x37, 0xdc, 0xd5, 0xea, 0xa6, 0xce, 0x4e, 0x7e, 0x06, 0xf0, 0xd0, 0xa3,
	0x26, 0x97, 0x97, 0xef, 0x2f, 0xa4, 0x29, 0xae, 0x4b, 0x2b, 0xed, 0x36, 0xcf, 0x8b, 0x5e, 0x05,
	0x2c, 0x47, 0x71, 0x33, 0xf3, 0x9a, 0x9d, 0x8d, 0xaf, 0xe1, 0xde, 0x8c, 0x78, 0x4e, 0x0b, 0x1d,
	0x87, 0x83, 0x70, 0xb8, 0x73, 0xf4, 0x6c, 0x64, 0x07, 0xb3, 0x81, 0x1e, 0x4d, 0xaa, 0xaf, 0xce,
	0x84, 0x59, 0x94, 0x69, 0x9d, 0x63, 0x91, 0x57, 0x32, 0x2f, 0xe3, 0x76, 0x25, 0xcd, 0xda, 0x8f,
	0x8f, 0xa1, 0xdb, 0xfc, 0x18, 0x19, 0x84, 0x37, 0x54, 0x7a, 0x39, 0xd6, 0xb4, 0x73, 0xfd, 0xc6,
	0xe7, 0x4b, 0xf2, 0x4a, 0x2a, 0xe7, 0xb8, 0xf5, 0x2a, 0x48, 0x7e, 0x04, 0xf0, 0x68, 0xa3, 0x76,
	0x4a, 0x5a, 0x49, 0xa1, 0xc9, 0x56, 0xcb, 0x64, 0x4e, 0x0e, 0xb5, 0x9b, 0x3a, 0x1b, 0xcf, 0x56,
	0x0d, 0xb4, 0x5c, 0x03, 0x2f, 0xfe, 0xdc, 0x40, 0x0d, 0xf9, 0x4b, 0x23, 0xe1, 0x7f, 0x6a, 0xe4,
	0x1d, 0xf4, 0xbc, 0x84, 0x53, 0x29, 0x04, 0x65, 0x66, 0xab, 0x1b, 0xea, 0x43, 0x47, 0x2a, 0xb2,
	0x47, 0x15, 0xd0, 0x7b, 0xc9, 0x11, 0x60, 0x4d, 0x9b, 0x4b, 0x4d, 0xdb, 0xb0, 0x92, 0x29, 0x1c,
	0xf8, 0x9c, 0x8f, 0x9a, 0x16, 0x27, 0x85, 0xc8, 0xff, 0x49, 0xc2, 0x1b, 0xd8, 0x6f, 0xac, 0xee,
	0x49, 0xb1, 0xed, 0xc6, 0xad, 0x6f, 0xee, 0xf3, 0xef, 0x01, 0x84, 0xa7, 0x5f, 0x72, 0xbc, 0x0f,
	0xed, 0x0b, 0x29, 0x88, 0xdd, 0xc1, 0x5d, 0x88, 0x6e, 0x9f, 0x1e, 0x0b, 0xb0, 0x07, 0x6c, 0xfd,
	0xa5, 0xb0, 0x16, 0xee, 0xc1, 0x4e, 0xe3, 0x4e, 0x59, 0x0f, 0x11, 0x1e, 0xfc, 0x3e, 0x61, 0x76,
	0x80, 0x0c, 0xba, 0xcd, 0x39, 0xb1, 0x3e, 0xee, 0xc3, 0xde, 0xda, 0x14, 0xd8, 0x61, 0x83, 0xe5,
	0xe0, 0xc3, 0xab, 0x8e, 0xfb, 0x11, 0xbc, 0xfc, 0x15, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xb7, 0x3e,
	0x4b, 0x15, 0x04, 0x00, 0x00,
}
